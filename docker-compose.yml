version: "3.8"

services:
    auth_service:
        image: auth_service
        container_name: auth_service
        build:
            context: .
            dockerfile: ./authentication_service/Dockerfile
        restart: on-failure
        environment:
            AUTH_SERVICE_PORT: ${AUTHENTICATION_SERVICE_PORT}
            MONGO_DB_HOST: ${AUTHENTICATION_MONGO_DB_HOST_DOCKER}
            MONGO_DB_PORT: ${MONGO_DB_PORT}      
            USER_SERVICE_HOST: ${USER_SERVICE_HOST_DOCKER}
            USER_SERVICE_PORT: ${USER_SERVICE_PORT}
            GATEWAY_HOST: ${GATEWAY_HOST_DOCKER}
            GATEWAY_PORT: ${GATEWAY_PORT}
        depends_on:
          - auth_mongo_db
        networks:
          - network

    user_service:
        image: user_service
        container_name: user_service
        build:
            context: .
            dockerfile: ./user_service/Dockerfile
        restart: on-failure
        environment:
            USER_SERVICE_PORT: ${USER_SERVICE_PORT}
            MONGO_DB_HOST: ${USER_MONGO_DB_HOST_DOCKER}
            MONGO_DB_PORT: ${MONGO_DB_PORT}
        depends_on:
            - user_mongo_db
        networks:
            - network
      
    post_service:
        image: post_service
        container_name: post_service
        build:
            context: .
            dockerfile: ./post_service/Dockerfile
        restart: on-failure
        environment:
            POST_SERVICE_PORT: ${POST_SERVICE_PORT}
            MONGO_DB_HOST: ${POST_MONGO_DB_HOST_DOCKER}
            MONGO_DB_PORT: ${MONGO_DB_PORT}
        depends_on:
            - post_mongo_db
        networks:
            - network

    connection_service:
        image: connection_service
        container_name: connection_service
        build:
            context: .
            dockerfile: ./connection_service/Dockerfile
        restart: on-failure
        environment:
            CONNECTION_SERVICE_HOST: ${CONNECTION_SERVICE_HOST_DOCKER}
            CONNECTION_SERVICE_PORT: ${CONNECTION_SERVICE_PORT}
            NEO4J_URI: ${NEO4J_URI}
            NEO4J_HOST: ${NEO4J_HOST_DOCKER}
            NEO4J_PORT: ${NEO4J_PORT}
            NEO4J_USERNAME: ${NEO4J_USERNAME}
            NEO4J_PASSWORD: ${NEO4J_PASSWORD}
            USER_SERVICE_HOST: ${USER_SERVICE_HOST_DOCKER}
            USER_SERVICE_PORT: ${USER_SERVICE_PORT}
        depends_on:
            - neo4j
        networks:
            - network

    api_gateway:
        image: api_gateway
        container_name: api_gateway
        build:
            context: .
            dockerfile: ./api_gateway/Dockerfile
        restart: on-failure
        ports:
            - ${GATEWAY_PORT}:${GATEWAY_PORT}
        environment:
            GATEWAY_PORT: ${GATEWAY_PORT}
            POST_SERVICE_HOST: ${POST_SERVICE_HOST_DOCKER}
            POST_SERVICE_PORT: ${POST_SERVICE_PORT}
            USER_SERVICE_HOST: ${USER_SERVICE_HOST_DOCKER}
            USER_SERVICE_PORT: ${USER_SERVICE_PORT}
            AUTH_SERVICE_HOST: ${AUTHENTICATION_SERVICE_HOST_DOCKER}
            AUTH_SERVICE_PORT: ${AUTHENTICATION_SERVICE_PORT}
        networks:
            - network

    auth_mongo_db:
        image: mongo
        container_name: auth_mongo_db
        command: mongod --quiet --logpath /dev/null
        restart: on-failure
        networks:
            - network
        logging:
            driver: none


    user_mongo_db:
        image: mongo
        container_name: user_mongo_db
        command: mongod --quiet --logpath /dev/null
        restart: on-failure
        networks:
            - network
        logging:
            driver: none

    post_mongo_db:
        image: mongo
        container_name: post_mongo_db
        command: mongod --quiet --logpath /dev/null
        restart: on-failure
        networks:
            - network
        logging:
            driver: none

    neo4j:
        image: neo4j:4.3.3
        container_name: neo4j
        hostname: neo4j
        restart: on-failure
        ports:
            - ${NEO4J_PORT}:${NEO4J_PORT}
            - ${NEO4J_PORT_2}:${NEO4J_PORT_2}
        environment:
            NEO4J_AUTH: none
            NEO4J_dbms_allow__upgrade: 'true'
        networks:
            - network

networks:
    network:
        driver: bridge